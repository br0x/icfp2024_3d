{
  "version": 3,
  "sources": ["node_modules/preact/src/constants.js", "node_modules/preact/src/util.js", "node_modules/preact/src/options.js", "node_modules/preact/src/create-element.js", "node_modules/preact/src/component.js", "node_modules/preact/src/diff/props.js", "node_modules/preact/src/create-context.js", "node_modules/preact/src/diff/children.js", "node_modules/preact/src/diff/index.js", "node_modules/preact/src/render.js", "node_modules/preact/src/clone-element.js", "node_modules/preact/src/diff/catch-error.js", "node_modules/preact/hooks/src/index.js", "node_modules/preact/jsx-runtime/src/utils.js", "node_modules/preact/src/constants.js", "node_modules/preact/jsx-runtime/src/index.js", "3d.tsx"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == 'http://www.w3.org/2000/svg') {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == null) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\t// @ts-expect-error olDom should be present on a DOM node\n\t\t\tif (oldDom && !oldDom.isConnected) {\n\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t}\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType === 'svg') namespace = 'http://www.w3.org/2000/svg';\n\telse if (nodeType === 'math')\n\t\tnamespace = 'http://www.w3.org/1998/Math/MathML';\n\telse if (!namespace) namespace = 'http://www.w3.org/1999/xhtml';\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, null, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType === 'foreignObject'\n\t\t\t\t\t? 'http://www.w3.org/1999/xhtml'\n\t\t\t\t\t: namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._component = vnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + str + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities(value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "import * as preact from 'preact';\nimport { useState } from 'preact/hooks';\n\n/** The types of operations a cell can contain. */\nenum Op {\n    Empty = ' ',\n    Left = '<',\n    Right = '>',\n    Up = '^',\n    Down = 'v',\n    Add = '+',\n    Sub = '-',\n    Mul = '*',\n    Div = '/',\n    Mod = '%',\n    TimeTravel = '@',\n    Eq = '=',\n    NEq = '#',\n    Solve = 'S',\n    A = 'A',\n    B = 'B',\n}\nconst OP_SYMBOLS = new Set(Object.values(Op) as string[]);\n\n/** Cells contain either an operation or a value. */\ntype Cell = Op | number;\n\ntype Board = Array<Array<Cell>>;\n\nnamespace Board {\n    export function parse(s: string): Board {\n        let board = s.split('\\n').map(row =>\n            row.split(/\\s+/).map(c => {\n                if (OP_SYMBOLS.has(c)) return c as Op;\n                if (c === '.' || c === '') return Op.Empty;\n                const num = parseInt(c, 10);\n                if (!isNaN(num)) return num;\n                throw new Error('invalid cell: ' + c);\n            }));\n        board = trim(board);\n        board = ensure(board, 0, 0);  // fill empty rows\n        return board;\n    }\n\n    /** Ensure board is large enough for (x,y) and all cells are present. */\n    export function ensure(board: Board, x: number, y: number): Board {\n        x = board.reduce((max, row) => Math.max(max, row.length - 1), x);\n\n        board = board.map(row => row.slice());\n        while (board.length < y + 1) {\n            board.push([]);\n        }\n        for (const row of board) {\n            while (row.length < x + 1) row.push(Op.Empty);\n        }\n        return board;\n    }\n\n    /** A 'trimmed' board has no trailing empty cells on a row. */\n    export function trim(board: Board): Board {\n        board = board.map(row => {\n            let end = row.length;\n            while (end > 0 && row[end - 1] === Op.Empty) end--;\n            return row.slice(0, end);\n        });\n        while (board.length > 0 && board[board.length - 1].length === 0) {\n            board.pop();\n        }\n        return board;\n    }\n\n    /** Encode a board into the ICFP format. */\n    export function encode(board: Board): string {\n        return trim(board).map(row => {\n            const line = row.map(c => c === Op.Empty ? '.' : c).join(' ');\n            if (line === '') return '.';\n            return line;\n        }).join('\\n');\n    }\n\n    export function eq(b1: Board, b2: Board): boolean {\n        if (b1.length !== b2.length) return false;\n        for (let i = 0; i < b1.length; i++) {\n            if (b1[i].length !== b2[i].length) return false;\n            for (let j = 0; j < b1[i].length; j++) {\n                if (b1[i][j] !== b2[i][j]) return false;\n            }\n        }\n        return true;\n    }\n}\n\nnamespace Eval {\n    /** Fill in the initial values of A/B. */\n    export function initialize(board: Board, a: number, b: number): Board {\n        return board.map(row => row.map(cell => {\n            if (cell === Op.A) return a;\n            if (cell === Op.B) return b;\n            return cell;\n        }));\n    }\n\n    /** One step of evaluation. */\n    export function step(board: Board, history: Board[]): Board | number {\n        const writes = new Map<string, Cell>();\n        let out = board;  // will be copied before writing\n\n        function write(x: number, y: number, cell: Cell) {\n            out = Board.ensure(out, x, y);\n\n            if (y < board.length && x < board[0].length && board[y][x] === Op.Solve) {\n                if (typeof cell === 'number') {\n                    throw new Error(`solved: ${cell}`);\n                }\n            }\n\n            out[y][x] = cell;\n\n            // Track writes to catch double writes.\n            // Note: we ignore all empty writes because per the rules, they always happen\n            // \"before\".  This might be wrong if we have clears and writes in the same step.\n            if (cell === Op.Empty) return;\n            const key = `${x},${y}`;\n            const prev = writes.get(key);\n            if (prev !== undefined) {\n                throw new Error(`multiple writes to ${key}: ${prev} / ${cell}`)\n            }\n            writes.set(key, cell);\n        }\n\n        /** Read a cell, clearing it. */\n        function consume(x: number, y: number): Cell | undefined {\n            const op = board[y][x];\n            if (op === Op.Empty) return;\n            write(x, y, Op.Empty);\n            return op as Op;\n        }\n\n        function move(x: number, y: number, dx: number, dy: number) {\n            const sx = x - dx;\n            const sy = y - dy;\n            dx = x + dx;\n            dy = y + dy;\n            if (sx < 0 || sy < 0) return;\n            if (dx < 0 || dy < 0) return;\n            if (sx >= board[0].length || sy >= board.length) return;\n            const cell = consume(sx, sy);\n            if (cell === undefined) return;\n            write(dx, dy, cell);\n        }\n\n        function mathOp(x: number, y: number, f: (l: number, u: number) => number | undefined): void {\n            if (typeof board[y][x - 1] !== 'number') return;\n            if (typeof board[y - 1][x] !== 'number') return;\n            const l = consume(x - 1, y) as number;\n            const u = consume(x, y - 1) as number;\n            const cell = f(l, u);\n            if (cell === undefined) return;\n            write(x, y + 1, cell);\n            write(x + 1, y, cell);\n        }\n\n        function eq(x: number, y: number, eq: boolean): void {\n            const l = board[y][x - 1];\n            const u = board[y - 1][x];\n            if (l === Op.Empty) return;\n            if (u === Op.Empty) return;\n            if (eq) {\n                if (l !== u) return;\n            } else {\n                if (l === u) return;\n            }\n            write(x, y + 1, consume(x - 1, y) as number);\n            write(x + 1, y, consume(x, y - 1) as number);\n        }\n\n        const timeTravels: { x: number, y: number, v: number, dt: number }[] = [];\n        function saveTimeTravel(x: number, y: number): void {\n            if (y + 1 >= board.length) return;\n            if (x + 1 >= board[0].length) return;\n            /*\n             .  v  .\n            dx  @ dy\n             . dt  .\n            */\n            const dx = board[y][x - 1];\n            if (typeof dx !== 'number') return;\n            const dy = board[y][x + 1];\n            if (typeof dy !== 'number') return;\n            const v = board[y - 1][x];\n            if (typeof v !== 'number') return;\n            const dt = board[y + 1][x];\n            if (typeof dt !== 'number') return;\n\n            timeTravels.push({ x: x - dx, y: y - dy, v, dt });\n        }\n\n        let solve;\n        for (let y = 0; y < board.length; y++) {\n            for (let x = 0; x < board[y].length; x++) {\n                const cell = board[y][x];\n                switch (cell) {\n                    case Op.Empty: break;\n                    case Op.A: break;\n                    case Op.B: break;\n\n                    case Op.Up: move(x, y, 0, -1); break;\n                    case Op.Down: move(x, y, 0, 1); break;\n                    case Op.Left: move(x, y, -1, 0); break;\n                    case Op.Right: move(x, y, 1, 0); break;\n\n                    case Op.Add: mathOp(x, y, (l, u) => l + u); break;\n                    case Op.Sub: mathOp(x, y, (l, u) => l - u); break;\n                    case Op.Mul: mathOp(x, y, (l, u) => l * u); break;\n                    case Op.Div: mathOp(x, y, (l, u) => Math.trunc(l / u)); break;\n                    case Op.Mod: mathOp(x, y, (l, u) => l % u); break;\n\n                    case Op.Eq: eq(x, y, true); break;\n                    case Op.NEq: eq(x, y, false); break;\n\n                    case Op.Solve: break;//solve = [x, y]; break;\n\n                    // TODO: buffer up timeTravels so multiple can happen at once\n                    case Op.TimeTravel: saveTimeTravel(x, y); break;\n\n                    default:\n                        if (typeof cell === 'number') break;\n                        throw new Error(`unhandled op: ${cell}`);\n                }\n            }\n        }\n\n        if (timeTravels.length > 0) {\n            writes.clear();\n            let dt = timeTravels[0].dt;\n            if (dt < 1) {\n                throw new Error('invalid dt');\n            }\n            if (timeTravels.some(t => t.dt !== dt)) {\n                throw new Error('time travels must all have the same dt');\n            }\n            history.pop(); // drop board that caused time travel\n            for (; dt > 0; --dt) {\n                out = history.pop()!;\n            }\n            out = Board.ensure(out, 0, 0);\n            for (let { x, y, v } of timeTravels) {\n                write(x, y, v);\n            }\n        }\n\n        return out;\n    }\n}\n\ninterface GridProps {\n    board: Board;\n    edit?(x: number, y: number, cell: Cell): void;\n}\nfunction Grid(props: GridProps) {\n    const { board } = props;\n\n    const tabindex = props.edit ? 0 : undefined;\n    const trs = board.map((row, y) => {\n        const tds = row.map((cell, x) => {\n            const text = cell === ' ' ? '\\u00a0' : cell;\n            return <td\n                data-x={x} data-y={y} tabindex={tabindex}\n            >{text}</td>;\n        });\n        return <tr>{tds}</tr>;\n    });\n\n    function onKeyDown(e: KeyboardEvent) {\n        const target = e.target as HTMLElement;\n        if (target.tagName !== 'TD') return;\n        e.preventDefault();\n        let [x, y] = [parseInt(target.dataset.x!), parseInt(target.dataset.y!)];\n        const table = target.parentElement!.parentElement as HTMLTableElement;\n        switch (e.key) {\n            case 'ArrowUp':\n                table.rows[y - 1]?.cells[x]?.focus(); break;\n            case 'ArrowDown':\n                table.rows[y + 1]?.cells[x]?.focus(); break;\n            case 'ArrowLeft':\n                table.rows[y]?.cells[x - 1]?.focus(); break;\n            case 'ArrowRight':\n                table.rows[y]?.cells[x + 1]?.focus(); break;\n        }\n\n        if (props.edit) {\n            let cell;\n            switch (e.key) {\n                case 'a': cell = Op.A; break;\n                case 'b': cell = Op.B; break;\n                case 's': cell = Op.Solve; break;\n                case '~': {\n                    const n = board[y][x];\n                    if (typeof n === 'number') {\n                        cell = -n;\n                    }\n                    break;\n                }\n\n                case 'Backspace': cell = Op.Empty; break;\n                case 'ArrowDown':\n                    if (y === board.length - 1) {\n                        cell = Op.Empty;\n                        y += 1;\n                    }\n                    break;\n                case 'ArrowRight':\n                    if (x === board[0].length - 1) {\n                        cell = Op.Empty;\n                        x += 1;\n                    }\n                    break;\n                default:\n                    if (OP_SYMBOLS.has(e.key)) {\n                        cell = e.key as Op;\n                    }\n                    if (e.key >= '0' && e.key <= '9') {\n                        cell = parseInt(e.key);\n                    }\n            }\n\n            if (cell !== undefined) {\n                props.edit(x, y, cell);\n            }\n        }\n    }\n\n    return <table class='grid' onKeyDown={onKeyDown}>{trs}</table>;\n}\n\nfunction App(props: { initial: Board }) {\n    let [board, setBoard] = useState(props.initial);\n    const [a, setA] = useState(0);\n    const [b, setB] = useState(0);\n\n    function setBoardAndURL(board: Board) {\n        window.history.replaceState(null, '', '?' + encodeURIComponent(Board.encode(board)));\n        setBoard(board);\n    }\n\n    function onEdit(x: number, y: number, cell: Cell) {\n        board = Board.ensure(board, x, y);\n        board[y][x] = cell;\n        setBoardAndURL(board);\n    }\n\n    function onInput(e: InputEvent, set: (n: number) => void) {\n        const value = parseInt((e.target as HTMLInputElement).value, 10);\n        if (isNaN(value)) return;\n        set(value);\n    }\n\n    function onA(e: InputEvent) {\n        onInput(e, setA);\n    }\n\n    function onB(e: InputEvent) {\n        onInput(e, setB);\n    }\n\n    let step = Eval.initialize(board, a, b);\n    const boards = [];\n    const grids = [];\n    for (let i = 0; i < 50; i++) {\n        boards.push(step);\n        grids.push(<div class='grid'>t={boards.length}<br /><Grid board={step} /></div>);\n        let next;\n        try {\n            next = Eval.step(step, boards);\n        } catch (e: any) {\n            grids.push(<p>Error: {e.message}</p>);\n            break;\n        }\n        if (typeof next === 'number') {\n            grids.push(<p>Solved: {next}</p>)\n            break;\n        }\n        if (Board.eq(step, next)) break;\n        step = next;\n    }\n\n    function onSubmit(e: Event) {\n        e.preventDefault();\n        const form = e.target as HTMLFormElement;\n        const text = (form.elements.namedItem('text')! as HTMLTextAreaElement).value;\n        const board = Board.parse(text);\n        setBoardAndURL(board);\n    }\n\n    return <>\n        <h1>3d</h1>\n        <div style={{ display: 'flex' }}>\n            <Grid board={board} edit={onEdit} />\n            <div style={{ width: '1em' }} />\n            <form onSubmit={onSubmit}>\n                <textarea name='text' rows={board.length} cols={board[0].length * 2}>{Board.encode(board)}</textarea><br />\n                <input type='submit' value='load' />\n            </form>\n        </div>\n        <br />\n        <p>\n            <label>A: <input size={4} value={a} onInput={onA} /></label>\n            {' '}\n            <label>B: <input size={4} value={b} onInput={onB} /></label>\n        </p>\n        {grids}\n    </>;;\n}\n\nlet initialBoard = Board.parse(decodeURIComponent(location.search.slice(1)));\ninitialBoard = Board.ensure(initialBoard, 4, 4);\npreact.render(<App initial={initialBoard} />, document.body);"],
  "mappings": "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",
  "names": ["MODE_HYDRATE", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "__i", "__u", "Fragment", "props", "children", "BaseComponent", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "sibling", "__k", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "prevDebounce", "options", "debounceRendering", "defer", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "sort", "depthSort", "shift", "assign", "__v", "diff", "__P", "namespaceURI", "__u", "__i", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "ref", "applyRef", "isConnected", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "constructor", "String", "createVNode", "isArray", "key", "findMatchingIndex", "unmount", "parentVNode", "insertBefore", "nodeType", "findMatchingIndex", "childVNode", "oldChildren", "skewedIndex", "remainingOldChildren", "key", "type", "x", "y", "oldVNode", "__u", "length", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "namespace", "useCapture", "o", "cssText", "replace", "toLowerCase", "slice", "l", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "this", "eventHandler", "_dispatched", "options", "event", "diff", "parentDom", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "oldDom", "isHydrating", "refQueue", "tmp", "c", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "provider", "componentContext", "i", "renderHook", "count", "renderResult", "newType", "constructor", "__e", "__b", "outer", "props", "contextType", "__c", "__", "__E", "prototype", "render", "BaseComponent", "doRender", "sub", "state", "context", "__n", "__h", "_sb", "__s", "getDerivedStateFromProps", "assign", "__v", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__d", "__k", "forEach", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "diffChildren", "isArray", "Fragment", "children", "base", "MODE_HYDRATE", "indexOf", "diffElementNodes", "diffed", "commitRoot", "root", "applyRef", "some", "cb", "call", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "EMPTY_OBJ", "attributes", "__html", "innerHTML", "getDomSibling", "removeNode", "ref", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "createElement", "namespaceURI", "firstChild", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "undefined", "BaseComponent", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "__h", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "eventClock", "eventProxy", "createEventProxy", "eventProxyCapture", "i", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "getHookState", "index", "type", "__h", "hooks", "__H", "length", "push", "__V", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "currentComponent", "oldBeforeDiff", "parentDom", "__k", "__m", "oldRoot", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "__", "hookItem", "__N", "__V", "EMPTY", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "invokeOrReturn", "arg", "f", "vnodeId", "isArray", "Array", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "__i", "__u", "defaultProps", "options", "Op", "Board", "s", "c", "x", "y", "i", "j", "Eval", "a", "b", "f", "l", "u", "eq", "v", "t", "e", "n", "p", "board"]
}
